[{"/home/tim/Projects/package-tracker/client/src/index.js":"1","/home/tim/Projects/package-tracker/client/src/reportWebVitals.js":"2","/home/tim/Projects/package-tracker/client/src/App.js":"3","/home/tim/Projects/package-tracker/client/src/components/pages/Home.js":"4","/home/tim/Projects/package-tracker/client/src/theme.js":"5","/home/tim/Projects/package-tracker/client/src/components/pages/ProTip.js":"6","/home/tim/Projects/package-tracker/client/src/components/InfoForm.js":"7","/home/tim/Projects/package-tracker/client/src/components/NavBar.js":"8","/home/tim/Projects/package-tracker/client/src/components/pages/Signup.js":"9","/home/tim/Projects/package-tracker/client/src/context/UserContext.js":"10","/home/tim/Projects/package-tracker/client/src/components/pages/Login.js":"11","/home/tim/Projects/package-tracker/client/src/services/auth-service.js":"12","/home/tim/Projects/package-tracker/client/src/components/pages/Tracking.js":"13","/home/tim/Projects/package-tracker/client/src/components/PackageCard.js":"14","/home/tim/Projects/package-tracker/client/src/components/Map.js":"15","/home/tim/Projects/package-tracker/client/src/services/package-service.js":"16","/home/tim/Projects/package-tracker/client/src/services/auth-header.js":"17","/home/tim/Projects/package-tracker/client/src/context/CheckUser.js":"18"},{"size":462,"mtime":1616527273543,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1616525189226,"results":"21","hashOfConfig":"22"},{"size":1036,"mtime":1618941744146,"results":"23","hashOfConfig":"20"},{"size":2012,"mtime":1618950372440,"results":"24","hashOfConfig":"20"},{"size":397,"mtime":1616527302644,"results":"25","hashOfConfig":"20"},{"size":1212,"mtime":1616527613397,"results":"26","hashOfConfig":"22"},{"size":2650,"mtime":1619623259818,"results":"27","hashOfConfig":"20"},{"size":2414,"mtime":1618408825742,"results":"28","hashOfConfig":"20"},{"size":4989,"mtime":1618950284607,"results":"29","hashOfConfig":"20"},{"size":88,"mtime":1617727257334,"results":"30","hashOfConfig":"20"},{"size":4112,"mtime":1619661452833,"results":"31","hashOfConfig":"20"},{"size":1094,"mtime":1618942687348,"results":"32","hashOfConfig":"20"},{"size":4017,"mtime":1619620374621,"results":"33","hashOfConfig":"20"},{"size":2699,"mtime":1619548439963,"results":"34","hashOfConfig":"20"},{"size":738,"mtime":1618332659029,"results":"35","hashOfConfig":"36"},{"size":1163,"mtime":1619121867027,"results":"37","hashOfConfig":"20"},{"size":406,"mtime":1617727560201,"results":"38","hashOfConfig":"20"},{"size":487,"mtime":1617727257334,"results":"39","hashOfConfig":"20"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1yw7jmm",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jw84h0",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1as3u14",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/tim/Projects/package-tracker/client/src/index.js",[],["84","85"],"/home/tim/Projects/package-tracker/client/src/reportWebVitals.js",[],"/home/tim/Projects/package-tracker/client/src/App.js",[],"/home/tim/Projects/package-tracker/client/src/components/pages/Home.js",["86","87"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Button, Typography, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport shipgif from \"../../assets/ship.gif\";\nimport AuthService from \"../../services/auth-service\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  spacing: {\n    marginTop: \"30%\",\n  },\n  gifspace: {\n    marginTop: \"5%\",\n  },\n});\n\nexport default function Home() {\n  const classes = useStyles();\n  const { user, setUser } = useContext(UserContext);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      setUser(user.username);\n    } else {\n      console.log(\"no user\");\n    }\n  }, []);\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={0}>\n        <Grid item xs={12} md={6} lg={6}>\n          <header>\n            <Typography className={classes.spacing} variant=\"h2\">\n              Trackage\n            </Typography>\n            <h3>\n              Keep track of all your packages without having to repeatedly scour\n              your inbox for that one email with the tracking number.\n            </h3>\n          </header>\n          {user ? (\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              to=\"/tracking\"\n              color=\"primary\"\n              component={Link}\n            >\n              + Track a Package\n            </Button>\n          ) : (\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              to=\"/login\"\n              color=\"primary\"\n              component={Link}\n            >\n              + Track a Package\n            </Button>\n          )}\n        </Grid>\n        <Grid item xs={0} md={6} lg={6}>\n          <img\n            className={classes.gifspace}\n            src={shipgif}\n            alt={\"gif of truck\"}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","/home/tim/Projects/package-tracker/client/src/theme.js",[],"/home/tim/Projects/package-tracker/client/src/components/pages/ProTip.js",[],"/home/tim/Projects/package-tracker/client/src/components/InfoForm.js",["88","89","90"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select,\n  TextField,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport PackageService from \"../services/package-service\";\nimport { UserContext } from \"../context/UserContext\";\nimport AuthService from \"../services/auth-service\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  formControl: {\n    minWidth: 100,\n  },\n  form: {\n    marginTop: 3,\n    minWidth: \"100%\",\n  },\n  button: {\n    marginTop: 6,\n    marginLeft: 10,\n  },\n}));\n\nexport default function InfoForm() {\n  const classes = useStyles();\n  const [item, setItem] = useState(\"\");\n  const [tracking, setTracking] = useState(\"\");\n  const [courier, setCourier] = useState(\"\");\n  const [pubId, setPubId] = useState(\"\");\n  const { user, setUser } = useContext(UserContext);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(pubId);\n    PackageService.addPackage(item, tracking, courier, pubId).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      setPubId(user.pub_id);\n    } else {\n      console.log(\"no user\");\n    }\n  }, []);\n\n  const handleChange = (event) => {\n    setCourier(event.target.value);\n    console.log(courier);\n  };\n\n  return (\n    <form\n      className=\"form\"\n      noValidate\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n    >\n      <TextField\n        label=\"Item Name\"\n        value={item}\n        onChange={(e) => {\n          setItem(e.target.value);\n        }}\n        style={{\n          margin: \"0 auto\",\n          minWidth: \"20%\",\n        }}\n        required\n      />\n\n      <TextField\n        label=\"Tracking Number\"\n        value={tracking}\n        style={{\n          margin: \"0 auto\",\n          minWidth: \"25%\",\n        }}\n        onChange={(e) => {\n          setTracking(e.target.value);\n        }}\n        required\n      />\n\n      <FormControl className={classes.formControl}>\n        <InputLabel>Courier</InputLabel>\n        <Select name=\"name\" value={courier} onChange={handleChange}>\n          <MenuItem value={\"UPS\"}>UPS</MenuItem>\n          <MenuItem value={\"USPS\"}>USPS</MenuItem>\n          <MenuItem value={\"FedEx\"}>FedEx</MenuItem>\n          <MenuItem value={\"DHL\"}>DHL</MenuItem>\n        </Select>\n      </FormControl>\n\n      <Button\n        className={classes.button}\n        type=\"submit\"\n        size=\"large\"\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        Go\n      </Button>\n    </form>\n  );\n}\n","/home/tim/Projects/package-tracker/client/src/components/NavBar.js",["91"],"import React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport AuthService from \"../services/auth-service\";\nimport { UserContext } from \"../context/UserContext\";\n\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    fontSize: \"17px\",\n    color: \"black\",\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\",\n    float: \"left\",\n  },\n  navItems: {\n    color: \"black\",\n    float: \"right\",\n  },\n}));\n\nexport default function NavBar() {\n  const classes = useStyles();\n\n  const { user, setUser } = useContext(UserContext);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"white\">\n        <Toolbar>\n          <Container maxWidth=\"xl\">\n            <Button className={classes.title} to={\"/\"} component={Link}>\n              Trackage\n            </Button>\n            {user ? (\n              <Button\n                className={classes.navItems}\n                to={`/${user}/dashboard`}\n                activeClassName=\"active\"\n                component={Link}\n              >\n                {user}\n              </Button>\n            ) : (\n              <Button\n                className={classes.navItems}\n                to=\"/signup\"\n                activeClassName=\"active\"\n                component={Link}\n              >\n                Register\n              </Button>\n            )}\n\n            {user ? (\n              <Button\n                className={classes.navItems}\n                to=\"/\"\n                activeClassName=\"active\"\n                component={Link}\n                onClick={() => {\n                  AuthService.logout();\n                  setUser(null);\n                }}\n              >\n                Log Out\n              </Button>\n            ) : (\n              <Button\n                className={classes.navItems}\n                to=\"/login\"\n                activeClassName=\"active\"\n                component={Link}\n              >\n                Log In\n              </Button>\n            )}\n          </Container>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","/home/tim/Projects/package-tracker/client/src/components/pages/Signup.js",["92","93"],"import React, { useState } from \"react\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Link,\n  Paper,\n  Box,\n  Grid,\n  Typography,\n} from \"@material-ui/core/\";\n\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AuthService from \"../../services/auth-service\";\nimport CheckUser from \"../../context/CheckUser\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://timpotts.xyz/\">\n        timpotts.xyz\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Signup() {\n  const classes = useStyles();\n\n  //   Form handling\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  function checkFields() {\n    if (password !== confirm) {\n      setError(\"Passwords do not match\");\n      return false;\n    } else if (\n      password === \"\" ||\n      email === \"\" ||\n      username === \"\" ||\n      confirm === \"\"\n    ) {\n      setError(\"Please fill out every field\");\n    }\n  }\n\n  function handleSubmit() {\n    console.log(\"========sending=============\");\n    AuthService.register(username, email, password).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <CheckUser />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <TextField\n              onChange={(e) => setUsername(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              value={username}\n              name=\"username\"\n              label=\"Username\"\n              type=\"username\"\n              id=\"username\"\n              autoComplete=\"current-username\"\n            />\n            <TextField\n              onChange={(e) => setEmail(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              value={email}\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              onChange={(e) => setPassword(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              value={password}\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <TextField\n              onChange={(e) => setConfirm(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              value={confirm}\n              name=\"password-confirm\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              id=\"password-confirm\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Register\n            </Button>\n\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","/home/tim/Projects/package-tracker/client/src/context/UserContext.js",[],"/home/tim/Projects/package-tracker/client/src/components/pages/Login.js",["94","95","96","97"],"import React, { useState, useContext } from \"react\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Link,\n  Paper,\n  Box,\n  Grid,\n  Typography,\n} from \"@material-ui/core/\";\n\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n// User Session Management\nimport AuthService from \"../../services/auth-service\";\nimport CheckUser from \"../../context/CheckUser\";\nimport { UserContext } from \"../../context/UserContext\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        timpotts.xyz\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(2, 1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login() {\n  const classes = useStyles();\n  const { user, setUser } = useContext(UserContext);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(\"SENDING\");\n    AuthService.login(username, password).catch((err) => {\n      console.log(err);\n    });\n  }\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <CheckUser />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log In\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <TextField\n              onChange={(e) => setUsername(e.target.value)}\n              value={username}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n            />\n            <TextField\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","/home/tim/Projects/package-tracker/client/src/services/auth-service.js",[],"/home/tim/Projects/package-tracker/client/src/components/pages/Tracking.js",["98","99","100","101","102"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Container,\n  Button,\n  Typography,\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport InfoForm from \"../InfoForm\";\nimport PackageCard from \"../PackageCard\";\nimport { UserContext } from \"../../context/UserContext\";\nimport AuthService from \"../../services/auth-service\";\nimport PackageService from \"../../services/package-service\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  spacing: {\n    marginTop: \"5%\",\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n}));\n\nexport default function Tracking() {\n  const classes = useStyles();\n\n  const [search, setSearch] = useState(\"\");\n  const { user, setUser } = useContext(UserContext);\n  const [view, setView] = useState(false);\n  const [packages, setPackages] = useState();\n\n  const toggle = () => {\n    if (view === false) {\n      setView(true);\n    } else {\n      setView(false);\n    }\n  };\n\n  function loadPackages(id) {\n    PackageService.getUserPackages(id).then((res) => {\n      if (!res) {\n        console.log(\"error\");\n        return null;\n      }\n      setPackages(res);\n    });\n  }\n\n  // JUST MAKE THE PUBLIC ID A CONTEXT VARIABLE\n  function getUser() {\n    const user = AuthService.getCurrentUser();\n    console.log(\"2\");\n    if (user) {\n      console.log(user);\n      setUser(user.username);\n      const pubId = user.pub_id;\n      console.log(\"================ID======================\");\n      console.log(pubId);\n      return pubId;\n    } else {\n      return { error: \"no user\" };\n    }\n  }\n\n  useEffect(() => {\n    let id = getUser();\n    loadPackages(id);\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      {/* <CheckUser /> */}\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n          <header>\n            <Typography className={classes.spacing} variant=\"h2\">\n              Packages\n            </Typography>\n          </header>\n        </Grid>\n        <Grid\n          item\n          xs={8}\n          sm={6}\n          md={6}\n          lg={6}\n          xl={6}\n          className={classes.searchContainer}\n        ></Grid>\n        <Grid item xs={4} sm={6} md={6} lg={6} xl={6}>\n          {view ? (\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"default\"\n              onClick={toggle}\n            >\n              <RemoveIcon />{\" \"}\n            </Button>\n          ) : (\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={toggle}\n            >\n              <AddIcon />\n            </Button>\n          )}\n        </Grid>\n        <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n          {view ? <InfoForm /> : null}\n        </Grid>\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n          {packages ? (\n            <div>\n              {packages.map((x) => (\n                <PackageCard\n                  key={x.id}\n                  itemId={x.id}\n                  item={x.item}\n                  shipdate={moment(x.shipdate).calendar()}\n                  status={x.status}\n                  expected={moment(x.expected).calendar()}\n                  deliverdate={moment(x.deliverdate).calendar()}\n                  carrierstatus={x.carrierstatus}\n                  tracking={x.tracking}\n                  user={x.user}\n                  courier={x.courier}\n                />\n              ))}\n            </div>\n          ) : (\n            <CircularProgress />\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","/home/tim/Projects/package-tracker/client/src/components/PackageCard.js",["103","104"],"import React, { Component } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n} from \"@material-ui/core/\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faGithubSquare, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport USPS from \"../assets/usps.png\";\nimport UPS from \"../assets/ups.png\";\nimport FedEx from \"../assets/fedex.png\";\nimport Typography from \"@material-ui/core/Typography\";\n// import MapBox from \"./Map\";\nimport MapHolder from \"../assets/mapHolder.png\";\n// import Map from \"./Map\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: \"100%\",\n    marginTop: \"20px\",\n    marginBottom: \"20px\",\n  },\n  media: {\n    height: 350,\n  },\n  right: {\n    float: \"right\",\n  },\n});\n\nexport default function PackageCard(props) {\n  const classes = useStyles();\n\n  function DisplayDate() {\n    if (props.expected !== \"Invalid date\") {\n      console.log(props.expected);\n      return (\n        <div>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.status} : {props.carrierstatus}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Expected Delivery : {props.expected}\n          </Typography>\n        </div>\n      );\n    } else {\n      return (\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {props.status} : {props.carrierstatus}\n        </Typography>\n      );\n    }\n  }\n\n  function CourierIcon() {\n    if (props.courier === \"USPS\") {\n      return <img src={USPS} alt=\"USPS logo\" width=\"25px\" height=\"25px\" />;\n    } else if (props.courier === \"UPS\") {\n      return <img src={UPS} alt=\"UPS logo\" width=\"25px\" height=\"25px\" />;\n    } else if (props.courier === \"FedEx\") {\n      return <img src={FedEx} alt=\"FedEx logo\" width=\"25px\" height=\"25px\" />;\n    }\n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={MapHolder}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.item}\n          </Typography>\n          {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.status} : {props.deliverdate}\n          </Typography> */}\n          <DisplayDate />\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <CourierIcon /> : {props.tracking}\n        {/* <Typography className={classes.right}>Status</Typography> */}\n      </CardActions>\n    </Card>\n  );\n}\n","/home/tim/Projects/package-tracker/client/src/components/Map.js",["105","106","107"],"/home/tim/Projects/package-tracker/client/src/services/package-service.js",[],"/home/tim/Projects/package-tracker/client/src/services/auth-header.js",[],"/home/tim/Projects/package-tracker/client/src/context/CheckUser.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"117","line":29,"column":6,"nodeType":"118","endLine":29,"endColumn":8,"suggestions":"119"},{"ruleId":"112","severity":1,"message":"120","line":9,"column":3,"nodeType":"114","messageId":"115","endLine":9,"endColumn":7},{"ruleId":"112","severity":1,"message":"121","line":39,"column":11,"nodeType":"114","messageId":"115","endLine":39,"endColumn":15},{"ruleId":"112","severity":1,"message":"122","line":39,"column":17,"nodeType":"114","messageId":"115","endLine":39,"endColumn":24},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"123","line":76,"column":10,"nodeType":"114","messageId":"115","endLine":76,"endColumn":15},{"ruleId":"112","severity":1,"message":"124","line":78,"column":12,"nodeType":"114","messageId":"115","endLine":78,"endColumn":23},{"ruleId":"112","severity":1,"message":"125","line":7,"column":3,"nodeType":"114","messageId":"115","endLine":7,"endColumn":19},{"ruleId":"112","severity":1,"message":"126","line":8,"column":3,"nodeType":"114","messageId":"115","endLine":8,"endColumn":11},{"ruleId":"112","severity":1,"message":"121","line":72,"column":11,"nodeType":"114","messageId":"115","endLine":72,"endColumn":15},{"ruleId":"112","severity":1,"message":"122","line":72,"column":17,"nodeType":"114","messageId":"115","endLine":72,"endColumn":24},{"ruleId":"112","severity":1,"message":"127","line":17,"column":8,"nodeType":"114","messageId":"115","endLine":17,"endColumn":18},{"ruleId":"112","severity":1,"message":"128","line":41,"column":10,"nodeType":"114","messageId":"115","endLine":41,"endColumn":16},{"ruleId":"112","severity":1,"message":"129","line":41,"column":18,"nodeType":"114","messageId":"115","endLine":41,"endColumn":27},{"ruleId":"112","severity":1,"message":"121","line":42,"column":11,"nodeType":"114","messageId":"115","endLine":42,"endColumn":15},{"ruleId":"116","severity":1,"message":"130","line":83,"column":6,"nodeType":"118","endLine":83,"endColumn":8,"suggestions":"131"},{"ruleId":"112","severity":1,"message":"132","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"112","severity":1,"message":"133","line":9,"column":3,"nodeType":"114","messageId":"115","endLine":9,"endColumn":9},{"ruleId":"112","severity":1,"message":"134","line":5,"column":3,"nodeType":"114","messageId":"115","endLine":5,"endColumn":9},{"ruleId":"112","severity":1,"message":"135","line":6,"column":3,"nodeType":"114","messageId":"115","endLine":6,"endColumn":13},{"ruleId":"112","severity":1,"message":"136","line":9,"column":10,"nodeType":"114","messageId":"115","endLine":9,"endColumn":24},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'Grid' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'error' is assigned a value but never used.","'checkFields' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'SearchIcon' is defined but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["140"],"'Component' is defined but never used.","'Button' is defined but never used.","'Marker' is defined but never used.","'InfoWindow' is defined but never used.","'formatRelative' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [setUser]",{"range":"145","text":"146"},"Update the dependencies array to be: [getUser]",{"range":"147","text":"148"},[785,787],"[setUser]",[2037,2039],"[getUser]"]