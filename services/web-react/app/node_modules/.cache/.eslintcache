[{"/app/src/index.js":"1","/app/src/App.js":"2","/app/src/theme.js":"3","/app/src/components/NavBar.js":"4","/app/src/components/pages/Tracking.js":"5","/app/src/components/pages/Signup.js":"6","/app/src/components/pages/Home.js":"7","/app/src/components/pages/Login.js":"8","/app/src/context/UserContext.js":"9","/app/src/components/InfoForm.js":"10","/app/src/context/CheckUser.js":"11","/app/src/components/PackageCard.js":"12","/app/src/services/package-service.js":"13","/app/src/services/auth-service.js":"14","/app/src/Constants.js":"15","/app/src/services/auth-header.js":"16"},{"size":462,"mtime":1702676594032,"results":"17","hashOfConfig":"18"},{"size":1036,"mtime":1702676594012,"results":"19","hashOfConfig":"18"},{"size":397,"mtime":1702676594036,"results":"20","hashOfConfig":"18"},{"size":2183,"mtime":1702676594028,"results":"21","hashOfConfig":"18"},{"size":4091,"mtime":1702676594032,"results":"22","hashOfConfig":"18"},{"size":5505,"mtime":1702676594032,"results":"23","hashOfConfig":"18"},{"size":1952,"mtime":1702676594028,"results":"24","hashOfConfig":"18"},{"size":4018,"mtime":1702676594028,"results":"25","hashOfConfig":"18"},{"size":88,"mtime":1702676594032,"results":"26","hashOfConfig":"18"},{"size":2527,"mtime":1702676594028,"results":"27","hashOfConfig":"18"},{"size":487,"mtime":1702676594032,"results":"28","hashOfConfig":"18"},{"size":3384,"mtime":1702676594028,"results":"29","hashOfConfig":"18"},{"size":1003,"mtime":1702676594032,"results":"30","hashOfConfig":"18"},{"size":1051,"mtime":1702676594032,"results":"31","hashOfConfig":"18"},{"size":220,"mtime":1702676594012,"results":"32","hashOfConfig":"18"},{"size":406,"mtime":1702676594032,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bkfe16",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],"/app/src/App.js",[],"/app/src/theme.js",[],"/app/src/components/NavBar.js",[],"/app/src/components/pages/Tracking.js",["71","72","73","74"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Container,\n  Button,\n  Typography,\n  Grid,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport InfoForm from \"../InfoForm\";\nimport PackageCard from \"../PackageCard\";\nimport { UserContext } from \"../../context/UserContext\";\nimport AuthService from \"../../services/auth-service\";\nimport PackageService from \"../../services/package-service\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  spacing: {\n    marginTop: \"5%\",\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n}));\n\nexport default function Tracking() {\n  const classes = useStyles();\n\n  const [search, setSearch] = useState(\"\");\n  const { setUser } = useContext(UserContext);\n  const [view, setView] = useState(false);\n  const [packages, setPackages] = useState([]);\n  const [message, setMessage] = useState(null);\n\n  const toggle = () => {\n    if (view === false) {\n      setView(true);\n    } else {\n      setView(false);\n    }\n  };\n\n  function loadPackages(id) {\n    PackageService.getUserPackages(id).then((res) => {\n      if (!res) {\n        setMessage(\"You are not currently tracking any packages.\");\n        return;\n      }\n      setPackages(res);\n    });\n  }\n\n  // JUST MAKE THE PUBLIC ID A CONTEXT VARIABLE\n  function getUser() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      setUser(user.username);\n      const pubId = user.pub_id;\n      return pubId;\n    } else {\n      return { error: \"no user\" };\n    }\n  }\n\n  function RenderResults() {\n    if (packages.length) {\n      return (\n        <div>\n          {packages.map((x) => (\n            <PackageCard\n              key={x.id}\n              itemId={x.id}\n              item={x.item}\n              shipdate={moment(x.shipdate).calendar()}\n              status={x.status}\n              statuscode={x.statuscode}\n              expected={moment(x.expected).format(\"dddd MMM Do\")}\n              deliverdate={moment(x.deliverdate).calendar()}\n              carrierstatus={x.carrierstatus}\n              tracking={x.tracking}\n              user={x.user}\n              courier={x.courier}\n            />\n          ))}\n        </div>\n      );\n    } else if (message !== null) {\n      return <h2>{message}</h2>;\n    } else {\n      return <CircularProgress />;\n    }\n  }\n\n  useEffect(() => {\n    let id = getUser();\n    loadPackages(id);\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      {/* <CheckUser /> */}\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n          <header>\n            <Typography className={classes.spacing} variant=\"h2\">\n              Packages\n            </Typography>\n          </header>\n        </Grid>\n        <Grid\n          item\n          xs={8}\n          sm={6}\n          md={6}\n          lg={6}\n          xl={6}\n          className={classes.searchContainer}\n        ></Grid>\n        <Grid item xs={4} sm={6} md={6} lg={6} xl={6}>\n          {view ? (\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"default\"\n              onClick={toggle}\n            >\n              <RemoveIcon />{\" \"}\n            </Button>\n          ) : (\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={toggle}\n            >\n              <AddIcon />\n            </Button>\n          )}\n        </Grid>\n        <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n          {view ? <InfoForm /> : null}\n        </Grid>\n        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\n          <RenderResults />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","/app/src/components/pages/Signup.js",["75"],"import React, { useState, useContext } from \"react\";\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Link,\n  Paper,\n  Box,\n  Grid,\n  Typography,\n} from \"@material-ui/core/\";\n\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AuthService from \"../../services/auth-service\";\nimport CheckUser from \"../../context/CheckUser\";\nimport { UserContext } from \"../../context/UserContext\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://timpotts.xyz/\">\n        timpotts.xyz\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/uBe2mknURG4/)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  error: {\n    color: \"red\",\n  },\n}));\n\nexport default function Signup() {\n  const classes = useStyles();\n\n  //   Form handling\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const { user, setUser } = useContext(UserContext);\n  const [submitting, setSubmitting] = useState(false);\n\n  function checkFields() {\n    if (password !== confirm) {\n      setError(\"Passwords do not match\");\n      return false;\n    } else if (\n      password === \"\" ||\n      email === \"\" ||\n      username === \"\" ||\n      confirm === \"\"\n    ) {\n      setError(\"Please fill out every field\");\n      return false;\n    }\n  }\n\n  function handleSubmit(event) {\n    setSubmitting(true);\n    event.preventDefault();\n    let valid = checkFields();\n    if (valid === false) {\n      setSubmitting(false);\n      console.log(\"this\");\n      return;\n    } else {\n      console.log(\"========sending=============\");\n      AuthService.register(username, email, password)\n        .then((res) => {\n          console.log(res);\n          setUser(res.username);\n        })\n        .catch((err) => {\n          console.log(err.status);\n          console.log(err);\n        });\n      setSubmitting(false);\n    }\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <CheckUser />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <TextField\n              onChange={(e) => setUsername(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"username\"\n              label=\"Username\"\n              type=\"username\"\n              id=\"username\"\n              autoComplete=\"current-username\"\n            />\n            <TextField\n              onChange={(e) => setEmail(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              value={email}\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              onChange={(e) => setPassword(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              value={password}\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <TextField\n              onChange={(e) => setConfirm(e.target.value)}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              value={confirm}\n              name=\"password-confirm\"\n              label=\"Confirm Password\"\n              type=\"password\"\n              id=\"password-confirm\"\n              autoComplete=\"current-password\"\n            />\n            {error ? <p className={classes.error}>{error}</p> : null}\n            <Button\n              type=\"submit\"\n              fullWidth\n              disabled={submitting}\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Register\n            </Button>\n\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","/app/src/components/pages/Home.js",["76"],"import React, { useEffect, useContext } from \"react\";\nimport { Container, Button, Typography, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport shipgif from \"../../assets/ship.gif\";\nimport AuthService from \"../../services/auth-service\";\nimport { UserContext } from \"../../context/UserContext\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  spacing: {\n    marginTop: \"30%\",\n  },\n  gifspace: {\n    marginTop: \"5%\",\n  },\n});\n\nexport default function Home() {\n  const classes = useStyles();\n  const { user, setUser } = useContext(UserContext);\n\n  useEffect(() => {\n    const user = AuthService.getCurrentUser();\n    if (user) {\n      setUser(user.username);\n    } else {\n      console.log(\"no user\");\n    }\n  }, []);\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Grid container spacing={0}>\n        <Grid item xs={12} md={6} lg={6}>\n          <header>\n            <Typography className={classes.spacing} variant=\"h2\">\n              Trackage\n            </Typography>\n            <h3>\n              Keep track of all your packages without having to repeatedly scour\n              your inbox for that one email with the tracking number.\n            </h3>\n          </header>\n          {user ? (\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              to=\"/tracking\"\n              color=\"primary\"\n              component={Link}\n            >\n              + Track a Package\n            </Button>\n          ) : (\n            <Button\n              size=\"large\"\n              variant=\"contained\"\n              to=\"/login\"\n              color=\"primary\"\n              component={Link}\n            >\n              + Track a Package\n            </Button>\n          )}\n        </Grid>\n        <Grid item xs={false} md={6} lg={6}>\n          <img className=\"gif-view\" src={shipgif} alt={\"gif of truck\"} />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","/app/src/components/pages/Login.js",[],"/app/src/context/UserContext.js",[],"/app/src/components/InfoForm.js",[],"/app/src/context/CheckUser.js",[],"/app/src/components/PackageCard.js",[],"/app/src/services/package-service.js",["77"],"import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport { config } from \"../Constants\";\n\nconst API_URL = config.url.API_URL;\n\nclass PackageService {\n  addPackage(item, tracking, courier, pubId) {\n    return axios\n      .post(\n        API_URL + \"/api/packages/\",\n        {\n          item,\n          tracking,\n          courier,\n          pubId,\n        },\n        { headers: authHeader() }\n      )\n      .then((response) => {\n        console.log(response);\n        return response.data;\n      });\n  }\n\n  getUserPackages(public_id) {\n    return axios\n      .get(API_URL + \"/api/packages/\" + public_id)\n      .then((response) => {\n        var packages = response.data.packages;\n        console.log(packages);\n        return packages;\n      });\n  }\n\n  deletePackage(package_id) {\n    return axios\n      .delete(API_URL + \"/api/packages/\" + package_id)\n      .then((response) => {\n        console.log(response);\n        return response;\n      });\n  }\n}\nexport default new PackageService();\n","/app/src/services/auth-service.js",["78"],"import axios from \"axios\";\nimport { config } from \"../Constants\";\n\nconst API_URL = config.url.API_URL;\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"/api/auth/login\", {\n        username,\n        password,\n      })\n      .then((response) => {\n        if (response.data.token) {\n          console.log(response);\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios\n      .post(API_URL + \"/api/auth/register\", {\n        username,\n        email,\n        password,\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.data.token) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  getCurrentUser() {\n    let x = JSON.parse(localStorage.getItem(\"user\"));\n    return x;\n  }\n}\n\nexport default new AuthService();\n","/app/src/Constants.js",[],"/app/src/services/auth-header.js",[],{"ruleId":"79","severity":1,"message":"80","line":17,"column":8,"nodeType":"81","messageId":"82","endLine":17,"endColumn":18},{"ruleId":"79","severity":1,"message":"83","line":41,"column":10,"nodeType":"81","messageId":"82","endLine":41,"endColumn":16},{"ruleId":"79","severity":1,"message":"84","line":41,"column":18,"nodeType":"81","messageId":"82","endLine":41,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":110,"column":6,"nodeType":"87","endLine":110,"endColumn":8,"suggestions":"88"},{"ruleId":"79","severity":1,"message":"89","line":79,"column":11,"nodeType":"81","messageId":"82","endLine":79,"endColumn":15},{"ruleId":"85","severity":1,"message":"90","line":29,"column":6,"nodeType":"87","endLine":29,"endColumn":8,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":45,"column":1,"nodeType":"94","endLine":45,"endColumn":37},{"ruleId":"92","severity":1,"message":"93","line":50,"column":1,"nodeType":"94","endLine":50,"endColumn":34},"no-unused-vars","'SearchIcon' is defined but never used.","Identifier","unusedVar","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["96"],"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [getUser]",{"range":"101","text":"102"},"Update the dependencies array to be: [setUser]",{"range":"103","text":"104"},[2781,2783],"[getUser]",[775,777],"[setUser]"]